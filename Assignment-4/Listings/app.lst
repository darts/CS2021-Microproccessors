


ARM Macro Assembler    Page 1 


    1 00000000         ; Definitions  -- references to 'UM' are to the User Man
                       ual.
    2 00000000         
    3 00000000         ; Timer Stuff -- UM, Table 173
    4 00000000         
    5 00000000 E0004000 
                       T0      equ              0xE0004000  ; Timer 0 Base Addr
                                                            ess
    6 00000000 E0008000 
                       T1      equ              0xE0008000
    7 00000000         
    8 00000000 00000000 
                       IR      equ              0           ; Add this to a tim
                                                            er's base address t
                                                            o get actual regist
                                                            er address
    9 00000000 00000004 
                       TCR     equ              4
   10 00000000 00000014 
                       MCR     equ              0x14
   11 00000000 00000018 
                       MR0     equ              0x18
   12 00000000         
   13 00000000 00000002 
                       TimerCommandReset
                               equ              2
   14 00000000 00000001 
                       TimerCommandRun
                               equ              1
   15 00000000 00000003 
                       TimerModeResetAndInterrupt
                               equ              3
   16 00000000 00000001 
                       TimerResetTimer0Interrupt
                               equ              1
   17 00000000 000000FF 
                       TimerResetAllInterrupts
                               equ              0xFF
   18 00000000         
   19 00000000         ; VIC Stuff -- UM, Table 41
   20 00000000 FFFFF000 
                       VIC     equ              0xFFFFF000  ; VIC Base Address
   21 00000000 00000010 
                       IntEnable
                               equ              0x10
   22 00000000 00000030 
                       VectAddr
                               equ              0x30
   23 00000000 00000100 
                       VectAddr0
                               equ              0x100
   24 00000000 00000200 
                       VectCtrl0
                               equ              0x200
   25 00000000         
   26 00000000 00000004 
                       Timer0ChannelNumber
                               equ              4           ; UM, Table 63
   27 00000000 00000010 



ARM Macro Assembler    Page 2 


                       Timer0Mask
                               equ              1<<Timer0ChannelNumber 
                                                            ; UM, Table 63
   28 00000000 00000005 
                       IRQslot_en
                               equ              5           ; UM, Table 58
   29 00000000         
   30 00000000 E0028008 
                       IO0DIR  EQU              0xE0028008
   31 00000000 E0028000 
                       IO0PIN  EQU              0xE0028000
   32 00000000 E0028004 
                       IO0SET  EQU              0xE0028004
   33 00000000 E002800C 
                       IO0CLR  EQU              0xE002800C
   34 00000000         
   35 00000000 00020000 
                       Red     EQU              0x00020000
   36 00000000 00200000 
                       Green   EQU              0x00200000
   37 00000000 00040000 
                       Blue    EQU              0x00040000
   38 00000000         
   39 00000000         
   40 00000000         
   41 00000000                 AREA             InitialisationAndMain, CODE, RE
ADONLY
   42 00000000                 IMPORT           main
   43 00000000         
   44 00000000                 EXPORT           start
   45 00000000         start
   46 00000000         ; initialisation code
   47 00000000         
   48 00000000         ; Initialise the VIC
   49 00000000 E59F00CC        ldr              r0,=VIC     ; looking at you, V
                                                            IC!
   50 00000004         
   51 00000004 E59F10CC        ldr              r1,=irqhan
   52 00000008 E5801100        str              r1,[r0,#VectAddr0] ; associate 
                                                            our interrupt handl
                                                            er with Vectored In
                                                            terrupt 0
   53 0000000C         
   54 0000000C E3A01024        mov              r1,#Timer0ChannelNumber+(1<<IRQ
slot_en)
   55 00000010 E5801200        str              r1,[r0,#VectCtrl0] ; make Timer
                                                             0 interrupts the s
                                                            ource of Vectored I
                                                            nterrupt 0
   56 00000014         
   57 00000014 E3A01010        mov              r1,#Timer0Mask
   58 00000018 E5801010        str              r1,[r0,#IntEnable] ; enable Tim
                                                            er 0 interrupts to 
                                                            be recognised by th
                                                            e VIC
   59 0000001C         
   60 0000001C E3A01000        mov              r1,#0
   61 00000020 E5801030        str              r1,[r0,#VectAddr] ; remove any 
                                                            pending interrupt (



ARM Macro Assembler    Page 3 


                                                            may not be needed)
   62 00000024         
   63 00000024         ; Initialise Timer 0
   64 00000024 E59F00B0        ldr              r0,=T0      ; looking at you, T
                                                            imer 0!
   65 00000028         
   66 00000028 E3A01002        mov              r1,#TimerCommandReset
   67 0000002C E5801004        str              r1,[r0,#TCR]
   68 00000030         
   69 00000030 E3A010FF        mov              r1,#TimerResetAllInterrupts
   70 00000034 E5801000        str              r1,[r0,#IR]
   71 00000038         
   72 00000038 E59F10A0        ldr              r1,=(14745600/200)-1 ; 5 ms = 1
                                                            /200 second
   73 0000003C E5801018        str              r1,[r0,#MR0]
   74 00000040         
   75 00000040 E3A01003        mov              r1,#TimerModeResetAndInterrupt
   76 00000044 E5801014        str              r1,[r0,#MCR]
   77 00000048         
   78 00000048 E3A01001        mov              r1,#TimerCommandRun
   79 0000004C E5801004        str              r1,[r0,#TCR]
   80 00000050         
   81 00000050         ;from here, initialisation is finished, so it should be 
                       the main body of the main program
   82 00000050         
   83 00000050         ; Set pins P0.17, P0.18 and P0.21 as outputs
   84 00000050 E59F008C        LDR              R0, =IO0DIR ; load IO directory
                                                            
   85 00000054 E5901000        LDR              R1, [R0]    ; get the value at 
                                                            the pins
   86 00000058 E3811826        ORR              R1, R1, #0x00260000 ; get pinma
                                                            sk to set as output
                                                            s
   87 0000005C E5801000        STR              R1, [R0]    ; set the pins as o
                                                            utputs
   88 00000060         
   89 00000060         ; Clear the LED's
   90 00000060 E59F0080        LDR              R0, =IO0SET ; load the pin addr
                                                            
   91 00000064 E5801000        STR              R1, [R0]    ; store mask in pin
                                                             addr
   92 00000068         
   93 00000068         ;ldr r2, =IO0CLR   
   94 00000068         ;ldr r3, =0x00200000
   95 00000068         ;str r3, [r2]
   96 00000068         
   97 00000068         
   98 00000068         
   99 00000068 E3A000C8        LDR              R0, =200    ;init counter
  100 0000006C E3A02602        LDR              R2, =Green
  101 00000070 E59F3074        LDR              R3, =IO0CLR
  102 00000074 E5832000        STR              R2, [R3]
  103 00000078         
  104 00000078 E59F4068        LDR              R4, =IO0SET
  105 0000007C E3A05826        LDR              R5, =0x00260000
  106 00000080         
  107 00000080         foreverLoop
  108 00000080 E59F1068        LDR              R1, =noOfCycles
  109 00000084 E5911000        LDR              R1, [R1]



ARM Macro Assembler    Page 4 


  110 00000088 E1500001        CMP              R0, R1
  111 0000008C CAFFFFFB        BGT              foreverLoop
  112 00000090 E28000C8        ADD              R0, R0, #200
  113 00000094         
  114 00000094 E5845000        STR              R5, [R4]
  115 00000098         
  116 00000098 E3520802        CMP              R2, #Red
  117 0000009C 0A000002        BEQ              nowGreen
  118 000000A0 E3520602        CMP              R2, #Green
  119 000000A4 0A000003        BEQ              nowBlue
  120 000000A8 EA000005        B                nowRed
  121 000000AC         
  122 000000AC         nowGreen
  123 000000AC E3A02602        LDR              R2, =Green
  124 000000B0 E5832000        STR              R2, [R3]
  125 000000B4 EAFFFFF1        B                foreverLoop
  126 000000B8         
  127 000000B8         nowBlue
  128 000000B8 E3A02701        LDR              R2, =Blue
  129 000000BC E5832000        STR              R2, [R3]
  130 000000C0 EAFFFFEE        B                foreverLoop
  131 000000C4         
  132 000000C4         nowRed
  133 000000C4 E3A02802        LDR              R2, =Red
  134 000000C8 E5832000        STR              R2, [R3]
  135 000000CC EAFFFFEB        B                foreverLoop
  136 000000D0         
  137 000000D0 EAFFFFFE 
                       wloop   b                wloop       ; branch always
  138 000000D4         ;main program execution will never drop below the statem
                       ent above.
  139 000000D4         
  140 000000D4 FFFFF000 
              00000000 
              E0004000 
              00011FFF 
              E0028008 
              E0028004 
              E002800C 
              00000000         AREA             InterruptStuff, CODE, READONLY
  141 00000000 E24EE004 
                       irqhan  sub              lr,lr,#4
  142 00000004 E92D4003        stmfd            sp!,{r0-r1,lr} ; the lr will be
                                                             restored to the pc
                                                            
  143 00000008         
  144 00000008         ;this is the body of the interrupt handler
  145 00000008         
  146 00000008         ;here you'd put the unique part of your interrupt handle
                       r
  147 00000008         ;all the other stuff is "housekeeping" to save registers
                        and acknowledge interrupts
  148 00000008 E59F0024        LDR              R0, =noOfCycles
  149 0000000C E5901000        LDR              R1, [R0]
  150 00000010 E2811001        ADD              R1, R1, #1
  151 00000014 E5801000        STR              R1, [R0]
  152 00000018         
  153 00000018         ;this is where we stop the timer from making the interru
                       pt request to the VIC



ARM Macro Assembler    Page 5 


  154 00000018         ;i.e. we 'acknowledge' the interrupt
  155 00000018 E59F0018        ldr              r0,=T0
  156 0000001C E3A01001        mov              r1,#TimerResetTimer0Interrupt
  157 00000020 E5801000        str              r1,[r0,#IR] ; remove MR0 interr
                                                            upt request from ti
                                                            mer
  158 00000024         
  159 00000024         ;here we stop the VIC from making the interrupt request 
                       to the CPU:
  160 00000024 E59F0010        ldr              r0,=VIC
  161 00000028 E3A01000        mov              r1,#0
  162 0000002C E5801030        str              r1,[r0,#VectAddr] ; reset VIC
  163 00000030         
  164 00000030 E8FD8003        ldmfd            sp!,{r0-r1,pc}^ ; return from i
                                                            nterrupt, restoring
                                                             pc from lr
  165 00000034         ; and also restoring the CPSR
  166 00000034         
  167 00000034         
  168 00000034         
  169 00000034         
  170 00000034 00000000 
              E0004000 
              FFFFF000         AREA             TestData, DATA, READWRITE
  171 00000000         
  172 00000000         noOfCycles
  173 00000000 00000000        DCD              0x0
  174 00000004         
  175 00000004                 END
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\a
pp.d -o.\app.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Ke
il_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 
1" --predefine="__UVISION_VERSION SETA 516" --list=.\listings\app.lst App.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InitialisationAndMain 00000000

Symbol: InitialisationAndMain
   Definitions
      At line 41 in file App.s
   Uses
      None
Comment: InitialisationAndMain unused
foreverLoop 00000080

Symbol: foreverLoop
   Definitions
      At line 107 in file App.s
   Uses
      At line 111 in file App.s
      At line 125 in file App.s
      At line 130 in file App.s
      At line 135 in file App.s

nowBlue 000000B8

Symbol: nowBlue
   Definitions
      At line 127 in file App.s
   Uses
      At line 119 in file App.s
Comment: nowBlue used once
nowGreen 000000AC

Symbol: nowGreen
   Definitions
      At line 122 in file App.s
   Uses
      At line 117 in file App.s
Comment: nowGreen used once
nowRed 000000C4

Symbol: nowRed
   Definitions
      At line 132 in file App.s
   Uses
      At line 120 in file App.s
Comment: nowRed used once
start 00000000

Symbol: start
   Definitions
      At line 45 in file App.s
   Uses
      At line 44 in file App.s
Comment: start used once
wloop 000000D0

Symbol: wloop
   Definitions
      At line 137 in file App.s
   Uses
      At line 137 in file App.s
Comment: wloop used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

InterruptStuff 00000000

Symbol: InterruptStuff
   Definitions
      At line 140 in file App.s
   Uses
      None
Comment: InterruptStuff unused
irqhan 00000000

Symbol: irqhan
   Definitions
      At line 141 in file App.s
   Uses
      At line 51 in file App.s
Comment: irqhan used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestData 00000000

Symbol: TestData
   Definitions
      At line 170 in file App.s
   Uses
      None
Comment: TestData unused
noOfCycles 00000000

Symbol: noOfCycles
   Definitions
      At line 172 in file App.s
   Uses
      At line 108 in file App.s
      At line 148 in file App.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Blue 00040000

Symbol: Blue
   Definitions
      At line 37 in file App.s
   Uses
      At line 128 in file App.s
Comment: Blue used once
Green 00200000

Symbol: Green
   Definitions
      At line 36 in file App.s
   Uses
      At line 100 in file App.s
      At line 118 in file App.s
      At line 123 in file App.s

IO0CLR E002800C

Symbol: IO0CLR
   Definitions
      At line 33 in file App.s
   Uses
      At line 101 in file App.s
Comment: IO0CLR used once
IO0DIR E0028008

Symbol: IO0DIR
   Definitions
      At line 30 in file App.s
   Uses
      At line 84 in file App.s
Comment: IO0DIR used once
IO0PIN E0028000

Symbol: IO0PIN
   Definitions
      At line 31 in file App.s
   Uses
      None
Comment: IO0PIN unused
IO0SET E0028004

Symbol: IO0SET
   Definitions
      At line 32 in file App.s
   Uses
      At line 90 in file App.s
      At line 104 in file App.s

IR 00000000

Symbol: IR
   Definitions
      At line 8 in file App.s
   Uses
      At line 70 in file App.s
      At line 157 in file App.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


IRQslot_en 00000005

Symbol: IRQslot_en
   Definitions
      At line 28 in file App.s
   Uses
      At line 54 in file App.s
Comment: IRQslot_en used once
IntEnable 00000010

Symbol: IntEnable
   Definitions
      At line 21 in file App.s
   Uses
      At line 58 in file App.s
Comment: IntEnable used once
MCR 00000014

Symbol: MCR
   Definitions
      At line 10 in file App.s
   Uses
      At line 76 in file App.s
Comment: MCR used once
MR0 00000018

Symbol: MR0
   Definitions
      At line 11 in file App.s
   Uses
      At line 73 in file App.s
Comment: MR0 used once
Red 00020000

Symbol: Red
   Definitions
      At line 35 in file App.s
   Uses
      At line 116 in file App.s
      At line 133 in file App.s

T0 E0004000

Symbol: T0
   Definitions
      At line 5 in file App.s
   Uses
      At line 64 in file App.s
      At line 155 in file App.s

T1 E0008000

Symbol: T1
   Definitions
      At line 6 in file App.s
   Uses
      None
Comment: T1 unused



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

TCR 00000004

Symbol: TCR
   Definitions
      At line 9 in file App.s
   Uses
      At line 67 in file App.s
      At line 79 in file App.s

Timer0ChannelNumber 00000004

Symbol: Timer0ChannelNumber
   Definitions
      At line 26 in file App.s
   Uses
      At line 27 in file App.s
      At line 54 in file App.s

Timer0Mask 00000010

Symbol: Timer0Mask
   Definitions
      At line 27 in file App.s
   Uses
      At line 57 in file App.s
Comment: Timer0Mask used once
TimerCommandReset 00000002

Symbol: TimerCommandReset
   Definitions
      At line 13 in file App.s
   Uses
      At line 66 in file App.s
Comment: TimerCommandReset used once
TimerCommandRun 00000001

Symbol: TimerCommandRun
   Definitions
      At line 14 in file App.s
   Uses
      At line 78 in file App.s
Comment: TimerCommandRun used once
TimerModeResetAndInterrupt 00000003

Symbol: TimerModeResetAndInterrupt
   Definitions
      At line 15 in file App.s
   Uses
      At line 75 in file App.s
Comment: TimerModeResetAndInterrupt used once
TimerResetAllInterrupts 000000FF

Symbol: TimerResetAllInterrupts
   Definitions
      At line 17 in file App.s
   Uses
      At line 69 in file App.s
Comment: TimerResetAllInterrupts used once
TimerResetTimer0Interrupt 00000001



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols


Symbol: TimerResetTimer0Interrupt
   Definitions
      At line 16 in file App.s
   Uses
      At line 156 in file App.s
Comment: TimerResetTimer0Interrupt used once
VIC FFFFF000

Symbol: VIC
   Definitions
      At line 20 in file App.s
   Uses
      At line 49 in file App.s
      At line 160 in file App.s

VectAddr 00000030

Symbol: VectAddr
   Definitions
      At line 22 in file App.s
   Uses
      At line 61 in file App.s
      At line 162 in file App.s

VectAddr0 00000100

Symbol: VectAddr0
   Definitions
      At line 23 in file App.s
   Uses
      At line 52 in file App.s
Comment: VectAddr0 used once
VectCtrl0 00000200

Symbol: VectCtrl0
   Definitions
      At line 24 in file App.s
   Uses
      At line 55 in file App.s
Comment: VectCtrl0 used once
26 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 42 in file App.s
   Uses
      None
Comment: main unused
1 symbol
375 symbols in table
